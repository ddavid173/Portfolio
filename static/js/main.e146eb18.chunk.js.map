{"version":3,"sources":["componets/Button/Hamburger.tsx","componets/Banner/Banner.tsx","App.js","reportWebVitals.js","index.js"],"names":["Hamburger","_ref","Style","onClick","react_default","a","createElement","className","style","Banner","_useState","useState","_useState2","Object","slicedToArray","isOpen","setOpen","componets_Button_Hamburger","marginLeft","color","App","componets_Banner_Banner","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"+QAoBeA,eAXG,SAAHC,GAAgC,IAA3BC,EAAKD,EAALC,MAAOC,EAAOF,EAAPE,QAEvB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,MAAON,GAC3BE,EAAAC,EAAAC,cAAA,UAAQH,QAASA,EAASI,UAAU,OAAK,mBCMtCE,EAfA,WAAM,IAAAC,EACSC,oBAAkB,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA3CK,EAAMH,EAAA,GAAEI,EAAOJ,EAAA,GAMtB,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACW,EAAS,CAACf,MAAO,CAACgB,WAAY,OAAQf,QAN/B,WACDa,GAATD,MAMEX,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACW,MAAM,UAAWJ,EAAQ,OAAQ,YCFzCK,MARf,WACE,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACe,EAAM,QCKEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAA1B,GAAiD,IAA9C4B,EAAM5B,EAAN4B,OAAQC,EAAM7B,EAAN6B,OAAQC,EAAM9B,EAAN8B,OAAQC,EAAM/B,EAAN+B,OAAQC,EAAOhC,EAAPgC,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlC,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,WAAU,KACfnC,EAAAC,EAAAC,cAACkC,EAAI,QAOTlB","file":"static/js/main.e146eb18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Hamburger.css\"\r\n\r\n\r\ninterface Props {\r\n    Style: any,\r\n    onClick: () => void\r\n}\r\n\r\nconst Hamburger = ({Style, onClick}: Props) => {\r\n\r\n    return (\r\n        <div className=\"Square\" style={Style}>\r\n            <button onClick={onClick} className=\"Ham\">\r\n                &#128196;\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hamburger","import React, { useState } from \"react\";\r\nimport \"./Banner.css\";\r\nimport Hamburger from '../Button/Hamburger';\r\n\r\nconst Banner = () => {\r\n    const [isOpen, setOpen] = useState<boolean>(false)\r\n\r\n    const OnClick = () => {\r\n        { isOpen ? setOpen(false) : setOpen(true)}\r\n    }\r\n\r\n    return (\r\n        <div className=\"banner\">\r\n            <Hamburger Style={{marginLeft: \"2vw\"}} onClick={OnClick}></Hamburger>\r\n            <p style={{color:\"White\"}}>{isOpen? \"Open\": \"Closed\"}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Banner","import React from 'react';\r\nimport './App.css';\r\nimport Banner from \"./componets/Banner/Banner.tsx\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"Main\">\r\n      <Banner></Banner>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport Main from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}